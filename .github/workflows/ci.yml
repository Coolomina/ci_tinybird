
name: Tinybird CI with branching

on:
  workflow_call:
    secrets:
      admin_token:
        required: true
      tb_host:
        required: true

jobs:
  ci_branching:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v3
        with:
          python-version: "3.8"
          architecture: "x64"

      - name: Set environment variables
        run: |
          GIT_BRANCH=${GITHUB_HEAD_REF}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV
      - name: Install Tinybird CLI
        run: pip install tinybird-cli

      - name: Tinybird version
        run: tb --version       

      - name: Check all the data files syntax
        run: tb check  

      - name: Create new test Environment with data
        run: |
          tb \
          --host ${{ secrets.tb_host }} \
          --token ${{ secrets.admin_token }} \
          env create tmp_ci_${GITHUB_RUN_ID} \
          --last-partition --wait

      - name: List changes with production Workspace
        run: tb diff --production --no-verbose

      - name: Push changes to the test Environment
        run: |
          PUSH_FILE=./deployment/${{env.GIT_BRANCH}}-push.sh
          if [ -f "$PUSH_FILE" ]; then
            ./deployment/${{env.GIT_BRANCH}}-push.sh
          else
            tb push --push-deps --only-changes --force --populate --wait
          fi

      - name: List changes with test Environment (should be empty)
        run: tb diff

      - name: Run data quality tests
        run: |
          tb test run -v

      - name: Get regression labels
        id: regression_labels
        uses: SamirMarin/get-labels-action@v0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          label_key: regression

      - name: Run pipe regression tests
        run: |
          REGRESSION_FILE=./deployment/${{env.GIT_BRANCH}}-regression.yaml
          echo ${{ steps.regression_labels.outputs.labels }}
          tb env regression-tests coverage --wait $(echo ${{ steps.regression_labels.outputs.labels }} | tr , ' ')
  cleanup:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [ci_branching]
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v3
        with:
          python-version: "3.8"
          architecture: "x64"

      - name: Install Tinybird CLI
        run: pip install tinybird-cli

      - name: Tinybird version
        run: tb --version       

      - name: Drop test Environment
        run: |
          tb \
          --host ${{ secrets.tb_host }} \
          --token ${{ secrets.admin_token }} \
          env rm tmp_ci_${GITHUB_RUN_ID} \
          --yes
